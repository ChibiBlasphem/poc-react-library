{"version":3,"file":"IdiomaticExpandableCard.stories.829cd154.js","sources":["../../src/IdiomaticExpandableCard/IdiomaticExpandableCard.context.tsx","../../src/IdiomaticExpandableCard/IdiomaticExpandableCard.styles.ts","../../src/IdiomaticExpandableCard/IdiomaticExpandableCard.tsx"],"sourcesContent":["import { createContext, PropsWithChildren, ReactNode, useContext, useMemo } from 'react';\n\nexport interface CardContextValue {\n  setTitle: (node: ReactNode) => void;\n  setDetail: (node: ReactNode) => void;\n}\n\nconst IdiomaticExpandableCardContext = createContext<CardContextValue | undefined>(undefined);\n\nexport function IdiomaticExpandableCardProvider({\n  setTitle,\n  setDetail,\n  children,\n}: PropsWithChildren<CardContextValue>) {\n  const value = useMemo(() => ({ setTitle, setDetail }), [setTitle, setDetail]);\n  return (\n    <IdiomaticExpandableCardContext.Provider value={value}>\n      {children}\n    </IdiomaticExpandableCardContext.Provider>\n  );\n}\n\nexport function useTitleSetter() {\n  const ctx = useContext(IdiomaticExpandableCardContext);\n  if (!ctx) {\n    throw new Error('IdiomaticExpandableCard.Title must be used within IdiomaticExpandableCard');\n  }\n  return ctx.setTitle;\n}\n\nexport function useDetailSetter() {\n  const ctx = useContext(IdiomaticExpandableCardContext);\n  if (!ctx) {\n    throw new Error('IdiomaticExpandableCard.Detail must be used within IdiomaticExpandableCard');\n  }\n  return ctx.setDetail;\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  border: 1px solid #eaeaea;\n  background-color: #fff;\n  border-radius: 7px;\n  box-shadow: 0 2px 1px 0 rgba(0, 0, 0, 0.3);\n  margin: 15px 0;\n`;\n\nexport const Body = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 63px;\n  align-items: center;\n  height: 70px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: calc(100% - 63px);\n  height: 55px;\n  padding: 0 30px;\n  border-right: 2px solid #eaeaea;\n`;\n\nexport const ToggleDetail = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 63px;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n\n  & > svg {\n    transition: transform 0.5s;\n  }\n`;\n\nexport const Detail = styled.div`\n  border-top: 2px solid #eaeaea;\n  padding: 25px;\n`;\n","import { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { PropsWithChildren, ReactNode, useState, useLayoutEffect } from 'react';\nimport { useToggle } from '../hooks/useToggle';\nimport {\n  IdiomaticExpandableCardProvider,\n  useDetailSetter,\n  useTitleSetter,\n} from './IdiomaticExpandableCard.context';\nimport { Body, Container, Content, Detail, ToggleDetail } from './IdiomaticExpandableCard.styles';\n\nexport interface IdiomaticExpandableCardProps {\n  expandable?: boolean;\n}\n\nexport function IdiomaticExpandableCard({\n  children,\n  expandable = true,\n}: PropsWithChildren<IdiomaticExpandableCardProps>) {\n  const [isDetailOpened, toggleDetailOpened] = useToggle(false);\n  const [title, setTitle] = useState<ReactNode>(null);\n  const [detail, setDetail] = useState<ReactNode>(null);\n\n  return (\n    <>\n      <IdiomaticExpandableCardProvider setTitle={setTitle} setDetail={setDetail}>\n        {children}\n      </IdiomaticExpandableCardProvider>\n      <Container>\n        <Body>\n          <Content>{title}</Content>\n          {expandable && (\n            <ToggleDetail onClick={toggleDetailOpened}>\n              <FontAwesomeIcon\n                icon={faChevronDown}\n                rotation={isDetailOpened ? 180 : undefined}\n                size=\"2x\"\n              />\n            </ToggleDetail>\n          )}\n        </Body>\n        {expandable && isDetailOpened && (\n          <Detail data-testid=\"expandable-card_detail\">{detail}</Detail>\n        )}\n      </Container>\n    </>\n  );\n}\n\nIdiomaticExpandableCard.Title = function IdiomaticExpandableCardTitle({\n  children,\n}: PropsWithChildren<{}>) {\n  const setTitle = useTitleSetter();\n  useLayoutEffect(() => {\n    setTitle(children);\n  }, [children]);\n  return null;\n};\n\nIdiomaticExpandableCard.Detail = function IdiomaticExpandableCardDetail({\n  children,\n}: PropsWithChildren<{}>) {\n  const setDetail = useDetailSetter();\n  useLayoutEffect(() => {\n    setDetail(children);\n  }, [children]);\n  return null;\n};\n"],"names":["createContext","setTitle","setDetail","children","useMemo","_jsx","useContext","useState","_jsxs","_Fragment","title","toggleDetailOpened","faChevronDown","undefined","detail","IdiomaticExpandableCard","useLayoutEffect"],"mappings":"2sBAOA,KAAA,GAAAA,EAAAA,QAAAA,cAAA,MAAA,EAEO,WAAA,CAAyC,WAC9CC,YACAC,YACAC,CAEA,KAAA,GAAAC,EAAAA,QAAAA,QAAA,IAAA,EAA6B,WAAEH,WAAUC,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EACzC,MAAAG,GAAA,EAAA,SAAA,CACE,QAAyC,UAAzC,CAAA,CAIH,CAEM,YAAA,CACL,KAAA,GAAAC,qBAAA,CAAA,EACA,GAAA,CAAA,EACE,KAAA,IAAA,OAAA,2EAAA,EAEF,MAAA,GAAA,QACD,CAEM,YAAA,CACL,KAAA,GAAAA,qBAAA,CAAA,EACA,GAAA,CAAA,EACE,KAAA,IAAA,OAAA,4EAAA,EAEF,MAAA,GAAA,SACD,wsBClCM,KAAM,GAAY,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQnB,EAAO,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOd,EAAU,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUjB,EAAe,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EActB,EAAS,EAAO;AAAA;AAAA;AAAA,EC1BtB,WAAA,CAAiC,WACtCH,aAAAA,IACa,CAEb,KAAA,CAAA,EAAA,GAAA,EAAA,EAAA,EACA,CAAA,EAAA,GAAAI,EAAA,QAAA,SAAA,IAAA,EACA,CAAA,EAAA,GAAAA,EAAA,QAAA,SAAA,IAAA,EAEA,MAAAC,GAAAC,EAAA,CACE,SAAA,CAAAJ,EAAA,EAAA,CACE,WAAiC,YAAoB,UAArD,CAAA,EAAAG,EAAA,EAAA,CAGA,SAAA,CAAAA,EAAA,EAAA,CACE,SAAA,CAAAH,EAAA,EAAA,CACE,SAAA,CAAUK,CAAAA,EAAAA,GAAAA,EAAAA,EAAAA,CAER,QAAA,EAAuBC,SAAAA,EAAAA,EAAAA,CACrB,KAAA,EACQC,SAAAA,EAAAA,IAAAA,OAC2BC,KAAAA,IAC5B,CAAA,CAHP,CAAA,CAAA,CAJN,CAAA,EAAA,GAAA,GAAAR,EAAA,EAAA,CAaE,cAAA,yBAAoB,SAAA,CAA0BS,CAAAA,CAAAA,CAdlD,CAAA,CAAA,CAJF,CAAA,CAuBH,CAEDC,EAAAA,MAAAA,SAAAA,CAAsE,YACpEZ,CAEA,KAAA,GAAA,IACAa,SAAAA,QAAAA,gBAAAA,IAAAA,CACEf,EAAAA,CAAAA,CAAQ,EAAA,CAAA,CAAA,CAAA,EAEV,IACD,EAEDc,EAAAA,OAAAA,SAAAA,CAAwE,YACtEZ,CAEA,KAAA,GAAA,IACAa,SAAAA,QAAAA,gBAAAA,IAAAA,CACEd,EAAAA,CAAAA,CAAS,EAAA,CAAA,CAAA,CAAA,EAEX,IACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}