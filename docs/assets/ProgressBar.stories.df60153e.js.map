{"version":3,"file":"ProgressBar.stories.df60153e.js","sources":["../../src/utils/display-seconds.ts","../../src/components/ProgressBar/ProgressBar.styles.ts","../../src/components/ProgressBar/hooks.ts","../../src/components/ProgressBar/ProgressBar.tsx"],"sourcesContent":["/**\n * Display seconds as hours, minutes and seconds\n * e.g. displaySeconds(7273.12) = 2h 1m 13s\n *      displaySeconds(73.81) = 1m 14s\n * @param seconds - the number of seconds\n */\nexport function displaySeconds(seconds: number): string {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  if (seconds < 10) {\n    seconds = Math.round((seconds % 60) * 10) / 10; // keep 1 decimal\n  } else {\n    seconds = Math.round(seconds % 60); // no decimal\n  }\n\n  let display = '';\n  if (hours > 0) {\n    display += `${hours}h `;\n  }\n  if (minutes > 0) {\n    display += `${minutes}m `;\n  }\n  display += `${seconds}s`;\n\n  return display;\n}\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\n\nconst PROGRESS_BAR_HEIGHT = 5;\n\nexport const Background = styled.div`\n  position: relative;\n  width: 100%;\n  height: ${PROGRESS_BAR_HEIGHT}px;\n  background-color: rgba(0, 0, 0, 0.1);\n  border-radius: ${PROGRESS_BAR_HEIGHT / 2}px;\n  overflow: hidden;\n\n  .elapsed {\n    position: absolute;\n    background-color: #2a66a1;\n    height: 100%;\n    left: 0;\n    transition: width 0.5s;\n    border-top-right-radius: ${PROGRESS_BAR_HEIGHT / 2}px;\n    border-bottom-right-radius: ${PROGRESS_BAR_HEIGHT / 2}px;\n  }\n`;\n\nexport const TextElement = styled.div`\n  text-align: left;\n  margin-bottom: 5px;\n`;\n\nexport const RemainingTime = styled(TextElement)`\n  margin-top: 10px;\n`;\n\nexport const Triggerer = styled(TextElement)`\n  opacity: 0.7;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const Icon = styled(FontAwesomeIcon)`\n  margin-right: 10px;\n`;\n","import { useEffect, useState } from 'react';\n\nexport const useProgress = (planned: number | undefined, elapsed: number) => {\n  if (planned === undefined) {\n    return { percentage: undefined, remainingTime: undefined };\n  }\n\n  const percentage = Math.min(99, Math.round((100 * elapsed) / planned));\n  const remainingTime = Math.round(planned - elapsed);\n\n  return { percentage, remainingTime };\n};\n\nexport const useDelta = (initialValue: number) => {\n  const [delta, setDelta] = useState(initialValue);\n  const reset = () => setDelta(0);\n\n  useEffect(() => {\n    const i = setInterval(() => {\n      setDelta((d) => d + 1.0);\n    }, 1000);\n\n    return () => {\n      clearInterval(i);\n    };\n  }, []);\n\n  return { reset, delta };\n};\n","import { useEffect } from 'react';\nimport { faClock, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { displaySeconds } from '../../utils/display-seconds';\nimport { Background, Icon, RemainingTime, Triggerer } from './ProgressBar.styles';\nimport { useDelta, useProgress } from './hooks';\n\nexport interface ProgressBarProps {\n  planned?: number;\n  elapsed?: number;\n  triggerer?: string;\n}\n\nconst getRemainingText = (remainingTime: number | undefined) => {\n  if (remainingTime === undefined) {\n    return 'no time estimation available';\n  }\n\n  const displayedTime = displaySeconds(remainingTime);\n  return `about ${displayedTime} remaining`;\n};\n\nexport function ProgressBar({\n  planned,\n  elapsed: initialyElapsed = 0,\n  triggerer,\n}: ProgressBarProps) {\n  const { reset, delta } = useDelta(0);\n  const { percentage, remainingTime } = useProgress(planned, initialyElapsed + delta);\n  const remainingText = getRemainingText(remainingTime);\n\n  useEffect(() => {\n    reset();\n  }, [initialyElapsed]);\n\n  return (\n    <div role=\"progressbar\" aria-valuenow={percentage} aria-valuemin={0} aria-valuemax={100}>\n      {planned !== undefined && (\n        <Background>\n          <div\n            className=\"elapsed\"\n            data-testid=\"progressbar-elapsed\"\n            style={{ width: `${percentage}%` }}\n          />\n        </Background>\n      )}\n      <RemainingTime>\n        <Icon icon={faClock} /> {remainingText}\n      </RemainingTime>\n      <Triggerer>\n        <Icon icon={faUser} /> initiated by {triggerer}\n      </Triggerer>\n    </div>\n  );\n}\n"],"names":["useState","useEffect","planned","triggerer","reset","delta","percentage","remainingTime","_jsxs","_jsx","faClock","faUser"],"mappings":"2kBAMO,WAAwB,EAAyB,CACtD,KAAM,GAAQ,KAAK,MAAM,EAAU,IAAI,EACjC,EAAU,KAAK,MAAO,EAAU,KAAQ,EAAE,EAChD,AAAI,EAAU,GACZ,EAAU,KAAK,MAAO,EAAU,GAAM,EAAE,EAAI,GAElC,EAAA,KAAK,MAAM,EAAU,EAAE,EAGnC,GAAI,GAAU,GACd,MAAI,GAAQ,GACV,IAAW,GAAG,OAEZ,EAAU,GACZ,IAAW,GAAG,OAEhB,GAAW,GAAG,KAEP,CACT,CCtBA,KAAM,GAAsB,EAEf,EAAa,EAAO;AAAA;AAAA;AAAA,YAGrB;AAAA;AAAA,mBAEO,EAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BASV,EAAsB;AAAA,kCACnB,EAAsB;AAAA;AAAA,EAI3C,EAAc,EAAO;AAAA;AAAA;AAAA,EAKrB,EAAgB,EAAO,CAAW;AAAA;AAAA,EAIlC,EAAY,EAAO,CAAW;AAAA;AAAA;AAAA;AAAA;AAAA,EAO9B,EAAO,EAAO,CAAe;AAAA;AAAA,ECtC7B,EAAc,CAAC,EAA6B,IAAoB,CAC3E,GAAI,IAAY,OACd,MAAO,CAAE,WAAY,OAAW,cAAe,MAAU,EAGrD,KAAA,GAAa,KAAK,IAAI,GAAI,KAAK,MAAO,IAAM,EAAW,CAAO,CAAC,EAC/D,EAAgB,KAAK,MAAM,EAAU,CAAO,EAE3C,MAAA,CAAE,aAAY,gBACvB,EAEa,EAAW,AAAC,GAAyB,CAChD,KAAM,CAAC,EAAO,GAAYA,EAAA,QAAA,SAAS,CAAY,EACzC,EAAQ,IAAM,EAAS,CAAC,EAE9BC,SAAAA,QAAAA,UAAU,IAAM,CACR,KAAA,GAAI,YAAY,IAAM,CACjB,EAAA,AAAC,GAAM,EAAI,CAAG,GACtB,GAAI,EAEP,MAAO,IAAM,CACX,cAAc,CAAC,CAAA,CAEnB,EAAG,CAAE,CAAA,EAEE,CAAE,QAAO,QAClB,EChBA,EAAA,AAAA,GACE,IAAA,OACE,+BAIF,SADA,EAAA,CAAA,cAIK,WAAA,CAAqB,UAC1BC,QAAAA,EAAAA,EAC2B,aAC3BC,CAEA,KAAA,CAAM,QAAEC,SAAOC,EAAAA,CAAAA,EACf,CAAM,aAAEC,iBAAYC,EAAAA,EAAAA,EAAAA,CAAAA,EACpB,EAAA,EAAA,CAAA,EAEAN,SAAAA,QAAAA,UAAAA,IAAAA,CACEG,GAAK,EAAA,CAAA,CAAA,CAAA,EAGPI,EAAA,MAAA,CACE,KAAA,cAAU,gBAAA,EAA6BF,gBAAAA,EAA2B,gBAAA,IAAkB,SAAA,CAAA,IAAA,QAAAG,EAAA,EAAA,CAEhF,SAAAA,EAAA,MAAA,CACE,UAAA,UACY,cAAA,sBACE,MAAA,CACL,MAAA,GAAA,IAAYH,CAAZ,CAAA,CAHT,CAAA,EAAAE,EAAA,EAAA,CAOJ,SAAA,CAAAC,EAAA,EAAA,CACE,KAAA,CAAYC,CAAAA,EAAAA,IAAAA,CAAAA,CADd,CAAA,EAAAF,EAAA,EAAA,CAGA,SAAA,CAAAC,EAAA,EAAA,CACE,KAAA,CAAYE,CAAAA,EAAAA,iBAAAA,CAAAA,CADd,CAAA,CAAA,CAbF,CAAA,CAkBH;;;;;;;;;;;;;;;;;;;;;"}